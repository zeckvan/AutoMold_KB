本 Thread 遵循《Threads_Common_Execution_Rules.md》之通用條款；下列僅列本 Thread 的差異規則。

# 製鞋廠模具優先排模排產邏輯說明
 
## 1.定義說明
 
自動排模排產系統依據生產日期與班別（如日班、夜班），**逐日逐班**執行排模作業。每一班別的排模排產流程會取得以下五類關鍵資料：

- **生產排班日資訊(AutoMold_ProductionScheduleDay)**   
- **型體模具 Size 欠數(AutoMold_ArticleMold)**  
- **工單需求上模數(AutoMold_WorkMold)**
- **前班機台孔位資訊(AutoMold_Produce)**
- **歷史排模資訊(Automold_His)**
 
排模排產邏輯會依據上述資料進行處理，並按照下列 **五個執行緒（Threads）** 順序依序執行，每一項排模排產結果將會暫存於：
 
> `排模排產結果暫存表(AutoMold_Temp)`
  
---
 
## 2.1 排模邏輯執行緒（Threads）
 
| Thread 編號 | 排模邏輯條件說明 | 目標孔位來源        |
|-------------|------------------|----------------------|
| **Thread 1** | 底模代號 + 性別 + 部位 + 模具 Size | 前班機台孔位資訊 |
| **Thread 2** | 底模代號 + 性別 + 部位             | 前班機台孔位資訊 |
| **Thread 3** | 型體 + 底模代號 + 性別 + 部位 + 模具 Size | 歷史排模資訊 |
| **Thread 4** | 型體                              | 排模排產結果暫存表 |
| **Thread 5** | 急單優先                          | 排模排產結果暫存表 |
 
> 💡 每個 Thread 的執行結果皆會依條件進行模具排產，並即時記錄於暫存表，確保完整可追溯性與後續查核。
 
## 2.2 限制條款（Capacity Cap）
**目標**：確保每個 (FacilityId, ShiftDate, ShiftName, ProductId, ProductSize[, ArticleMoldId]) 的「本班新掛模數」不超過 `AutoMold_ArticleMold.SteerRequiredUpperMoldQuantity`。

### 2.2.1 候選集必要條件
- `SumBodySizeNeed > 0`
- `(SteerRequiredUpperMoldQuantity - ActualRequiredUpperMoldQuantity) > 0`

### 2.2.2 Cap-Ledger（名額帳本）
AI 必須維護一份名額帳本：
```
CapKey = (FacilityId, ShiftDate, ShiftName, ProductId, ProductSize[, ArticleMoldId])
Cap-Ledger[CapKey] = {
  SteerCap: SteerRequiredUpperMoldQuantity,
  Used: ActualRequiredUpperMoldQuantity + NewAssignedInThisRun
}
```

### 2.2.3 逐筆分派
每完成一筆分派：
1. `Used += 1`
2. 重新計算候選集
3. 再挑下一筆

### 2.2.4 達上限處置
若 `Used >= SteerCap`，立即停止該 CapKey 的新掛分派。

### 2.2.5 輸出欄位要求
- `IsNewUpperMold`：1=新掛；0=續產。

### 2.2.6 自我稽核
輸出前：分組檢查 `SUM(IsNewUpperMold) ≤ SteerRequiredUpperMoldQuantity`。
如違反：刪除尾筆直到符合，並產生 `ValidationReport`。

---

## 3. 測試案例對應表

| Thread 編號 | 邏輯條件說明 | 測試案例 |
|-------------|--------------|----------|
| **Thread 1** | 底模代號 + 性別 + 部位 + 模具 Size | [案例1_前班機台完全相符](../AutoMold_Test_Cases/案例1_前班機台完全相符.md) <br> [案例4_共模情境分派](../AutoMold_Test_Cases/案例4_共模情境分派.md) |
| **Thread 2** | 底模代號 + 性別 + 部位 (最接近 Size) | [案例2_Size不相符取最接近](../AutoMold_Test_Cases/案例2_Size不相符取最接近.md) <br> [案例4_共模情境分派](../AutoMold_Test_Cases/案例4_共模情境分派.md) |
| **Thread 3** | 型體 + 底模代號 + 性別 + 部位 + 模具 Size | [案例3_使用歷史排模資訊](../AutoMold_Test_Cases/案例3_使用歷史排模資訊.md) <br> [案例4_共模情境分派](../AutoMold_Test_Cases/案例4_共模情境分派.md) |
| **Thread 4** | 型體（綜合調度 / 剩餘戰力檢查 / 換模耗時） | [案例4_共模情境分派](../AutoMold_Test_Cases/案例4_共模情境分派.md) <br> [案例5_換模耗時導致跳過機台](../AutoMold_Test_Cases/案例5_換模耗時導致跳過機台.md) |
| **Thread 5** | 急單優先 | [案例6_急單搶佔排程](../AutoMold_Test_Cases/案例6_急單搶佔排程.md) |

---
 
## 4. 執行順序說明
 
1. 按生產班別順序再依序執行 Thread 1 至 Thread 5 。
2. 每一 Thread 若成功排模，結果寫入 `排模排產結果暫存表`。
3. 所有 Thread 完成後，方可進行下一班別之排模作業。
 
---

## 5. 與系統提示 / 輸出契約的對應

### 5.1 SystemPrompt 對應
- 本規則為所有排模決策的唯一依據；當 AI 回答產生疑慮，請參考：
  - `AutoMold_Tech_Docs/SystemPrompt.md`
- SystemPrompt 的要求：
  1) 輸入資料來源優先序以本規則的「定義說明」為準。  
  2) 決策流程需遵照本檔「Threads 階梯圖與邏輯」。  
  3) 不得臆測：本規則未定義的情況，回覆「規則中未定義」。

### 5.2 輸出契約（ScheduleRow JSON Schema）對應
- 所有決策輸出，**必須**符合 `AutoMold_Tech_Docs/ScheduleRow_JSON_Schema.md` (ScheduleRow@v1)。  
- 必填欄位：ShiftDate, ShiftName, FacilityId, ResourceId, ProductId, MoldNo, MoldPcsSeq, ShiftWorkQty, AppliedRules, DecisionPath, Confidence  
- `AppliedRules` 應對應 Thread 編號與條件，例如：`Thread1.exact-match`  
- `DecisionPath` 應清楚列出決策步驟

### 5.3 欄位對映表（Adapter Map：ScheduleRow → AutoMold_Temp）
| AutoMold_Temp 欄位 | 來源/計算方式 | ScheduleRow 對應 |
|---|---|---|
| ShiftDate | 直接帶入 | ShiftDate |
| ShiftName | 直接帶入 | ShiftName |
| FacilityId | 直接帶入 | FacilityId |
| ResourceId | 直接帶入 | ResourceId |
| ArticleMoldid | 直接帶入 | MoldNo |
| ArticleMoldsize | 選填 | ProductSize |
| MoldPcsSeq | 直接帶入 | MoldPcsSeq |
| ShiftWorkQty | 直接帶入 | ShiftWorkQty |
| ThreadName | 由 AppliedRules/DecisionPath 摘要 | AppliedRules |
| MaintainHour | 由 SQL/政策計算 | （Schema 無） |
| MoldChange | 由 MoldChangeMinutes 轉換 | MoldChangeMinutes |
| ShiftWork/MoldworkY/MoldworkN | 依政策公式計算 | （Schema 無） |

---

## 6. 測試與驗證流程
1. 匯入測試案例 Fixtures（CASE-001~005）。  
2. AI 產出 ScheduleRow JSON 陣列。  
3. Schema 驗證（ScheduleRow@v1）。  
4. Adapter 寫入 AutoMold_Temp。  
5. 匯出 actual.csv。  
6. 與 baseline expected.csv 比對 → 產生差異報告。  
7. 輸出 RunMetrics（完成對數、換模次數、產能利用率…）。

---

## 7. 文件交叉引用
- 規則（本檔）為決策依據；流程請見 Threads 表與邏輯章節。  
- 系統提示：`AutoMold_Tech_Docs/SystemPrompt.md`  
- 輸出契約：`AutoMold_Tech_Docs/ScheduleRow_JSON_Schema.md`  
- 測試與驗證：`5_Test_Cases/` + `6_Test_Results/`

## 差異化規則
- 是否允許共模：
- 特殊候選條件：
- 其他補充：


### 2.3 換模耗時與可用時段檢核
- 若新產品使用到新的 `ResourceId`，需計入換模耗時（例：0.5 小時）。  
- 檢核機台可用時段 ≥ (換模時間 + 生產時間)，不足則跳過候選機台。  

---

## 3.5 機台未被排模（補強條款）

**3.5.1 非共模唯一鍵**  
- 唯一鍵：`(FacilityId, ShiftDate, ShiftName, ProductId)`  
- 規則：同一班別 **ProductId 僅能分派一次**（非共模情境）。  

**3.5.2 不可跨機台切割**  
- 已分派的 `ProductId`，剩餘數量不得再分派到其他機台，若不足則延後處理。  

**3.5.3 共模開關**  
- Thread1/2/3：`AllowCoMold = false`（禁止同班多筆）。  
- Thread4：`AllowCoMold = true`，可允許多筆，但須符合共模條件（不同 MoldPcsSeq）。  

**3.5.4 共模上限**  
- 新增 `MaxCoMoldSlotsPerProductPerShift`，避免共模佔用過多班次戰力。  

**3.5.5 前班延續優先**  
- 若前班同一 ResourceId 已在加工同一 ProductId，則優先續用本班該機台。  

**3.5.6 跳過與重算**  
- 每跳過一台機台，必須 **立即重算候選集**，禁止一次性固定前 N 台。  

**3.5.7 失敗處置**  
- 若整班候選皆因去重被排除 → 記錄 `DecisionPath` = `RULE_3_5_DUP_PRODUCT`，並將剩餘量遞延。  

---

## 6. 系統護欄（System Safeguards）

- **唯一索引**：  
  ```sql
  CREATE UNIQUE INDEX UX_Temp_NonCoMold
  ON AutoMold_Temp(FacilityId, ShiftDate, ShiftName, ProductId)
  WHERE AllowCoMold = 0;
  ```
- **交易一致性**：`AutoMold_Temp`、`AutoMold_ArticleMold`、`AutoMold_WorkMold` → 同一交易處理。  
- **序列化流程**：逐筆寫入，立即重算，避免競爭條件。  

---

## 7. 紀錄與追蹤

- `AppliedRules`：必須包含  
  - `RULE_3_5_DISTINCT_PRODUCT_NON_COMOLD`  
  - `RULE_2_2_CAP_STEER_UPPER_MOLD`  
  - `RULE_2_3_SETUP_TIME_CHECK`  
- `DecisionPath`：逐筆紀錄跳過原因（如 DUP_PRODUCT、CAP_EXCEEDED、SETUP_FAIL）。  
